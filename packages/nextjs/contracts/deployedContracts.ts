/**
 * This file is autogenerated by Scaffold-ETH.
 * You should not edit it manually or your changes might be overwritten.
 */
import { GenericContractsDeclaration } from "~~/utils/scaffold-eth/contract";

const deployedContracts = {
  10143: {
    AudienceManager: {
      address: "0x1bbE773134E6aC83541C3baCF384f55E5d50F0Ae",
      abi: [
        {
          inputs: [
            {
              internalType: "address",
              name: "_initialOwner",
              type: "address",
            },
          ],
          stateMutability: "nonpayable",
          type: "constructor",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "owner",
              type: "address",
            },
          ],
          name: "OwnableInvalidOwner",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "account",
              type: "address",
            },
          ],
          name: "OwnableUnauthorizedAccount",
          type: "error",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "uint256",
              name: "matchId",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "address",
              name: "player1",
              type: "address",
            },
            {
              indexed: false,
              internalType: "address",
              name: "player2",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "timestamp",
              type: "uint256",
            },
          ],
          name: "ActiveFightersSet",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "uint256",
              name: "matchId",
              type: "uint256",
            },
            {
              indexed: true,
              internalType: "address",
              name: "fighterCheeredFor",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "audienceMember",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "newTotalHeatForThisPairing",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "cheerAmount",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "timestamp",
              type: "uint256",
            },
          ],
          name: "FighterCheered",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "previousOwner",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "newOwner",
              type: "address",
            },
          ],
          name: "OwnershipTransferred",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "uint256",
              name: "matchId",
              type: "uint256",
            },
            {
              indexed: true,
              internalType: "uint256",
              name: "seatId",
              type: "uint256",
            },
            {
              indexed: true,
              internalType: "address",
              name: "user",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "timestamp",
              type: "uint256",
            },
          ],
          name: "SeatLeft",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "uint256",
              name: "matchId",
              type: "uint256",
            },
            {
              indexed: true,
              internalType: "uint256",
              name: "seatId",
              type: "uint256",
            },
            {
              indexed: true,
              internalType: "address",
              name: "user",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "timestamp",
              type: "uint256",
            },
          ],
          name: "SeatTaken",
          type: "event",
        },
        {
          inputs: [],
          name: "TOTAL_SEATS",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "activeFightersInMatch",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_matchId",
              type: "uint256",
            },
            {
              internalType: "address",
              name: "_fighterToCheerFor",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "_cheerPoints",
              type: "uint256",
            },
          ],
          name: "cheerForFighter",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
            {
              internalType: "address",
              name: "",
              type: "address",
            },
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          name: "fighterAudienceHeat",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_matchId",
              type: "uint256",
            },
          ],
          name: "getActiveFighters",
          outputs: [
            {
              internalType: "address[2]",
              name: "",
              type: "address[2]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_matchId",
              type: "uint256",
            },
            {
              internalType: "address",
              name: "_fighter",
              type: "address",
            },
            {
              internalType: "address",
              name: "_audienceMember",
              type: "address",
            },
          ],
          name: "getAudienceHeatForFighter",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_matchId",
              type: "uint256",
            },
          ],
          name: "getOccupiedSeatInfo",
          outputs: [
            {
              internalType: "uint256[]",
              name: "seatIds_",
              type: "uint256[]",
            },
            {
              internalType: "address[]",
              name: "occupants_",
              type: "address[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_matchId",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "_seatIdFromFrontend",
              type: "uint256",
            },
          ],
          name: "getSeatOccupant",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_matchId",
              type: "uint256",
            },
            {
              internalType: "address",
              name: "_user",
              type: "address",
            },
          ],
          name: "getUserSeatId",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_matchId",
              type: "uint256",
            },
          ],
          name: "leaveSeat",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "owner",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "renounceOwnership",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "seatOccupants",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_matchId",
              type: "uint256",
            },
            {
              internalType: "address",
              name: "_player1",
              type: "address",
            },
            {
              internalType: "address",
              name: "_player2",
              type: "address",
            },
          ],
          name: "setActiveFighters",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_matchId",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "_seatIdFromFrontend",
              type: "uint256",
            },
          ],
          name: "takeSeat",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "newOwner",
              type: "address",
            },
          ],
          name: "transferOwnership",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          name: "userCurrentSeat",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
      ],
      inheritedFunctions: {
        owner: "@openzeppelin/contracts/access/Ownable.sol",
        renounceOwnership: "@openzeppelin/contracts/access/Ownable.sol",
        transferOwnership: "@openzeppelin/contracts/access/Ownable.sol",
      },
    },
    ImmortalBlock: {
      address: "0x4E810572FBEB16bf58c6e94CDD9009130e3B04d5",
      abi: [
        {
          inputs: [
            {
              internalType: "address",
              name: "_initialOwner",
              type: "address",
            },
          ],
          stateMutability: "nonpayable",
          type: "constructor",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "owner",
              type: "address",
            },
          ],
          name: "OwnableInvalidOwner",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "account",
              type: "address",
            },
          ],
          name: "OwnableUnauthorizedAccount",
          type: "error",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "uint256",
              name: "blockId",
              type: "uint256",
            },
            {
              indexed: true,
              internalType: "uint256",
              name: "matchId",
              type: "uint256",
            },
            {
              indexed: true,
              internalType: "address",
              name: "winner",
              type: "address",
            },
            {
              indexed: false,
              internalType: "string",
              name: "winnerName",
              type: "string",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "timestamp",
              type: "uint256",
            },
          ],
          name: "BlockForged",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "previousOwner",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "newOwner",
              type: "address",
            },
          ],
          name: "OwnershipTransferred",
          type: "event",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_matchId",
              type: "uint256",
            },
            {
              internalType: "address",
              name: "_winner",
              type: "address",
            },
            {
              internalType: "string",
              name: "_winnerName",
              type: "string",
            },
            {
              internalType: "string",
              name: "_extraData",
              type: "string",
            },
          ],
          name: "forgeBlock",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_limit",
              type: "uint256",
            },
          ],
          name: "getRecentRecords",
          outputs: [
            {
              components: [
                {
                  internalType: "uint256",
                  name: "matchId",
                  type: "uint256",
                },
                {
                  internalType: "address",
                  name: "winner",
                  type: "address",
                },
                {
                  internalType: "string",
                  name: "winnerName",
                  type: "string",
                },
                {
                  internalType: "uint256",
                  name: "timestamp",
                  type: "uint256",
                },
                {
                  internalType: "string",
                  name: "extraData",
                  type: "string",
                },
              ],
              internalType: "struct ImmortalBlock.ImmortalRecord[]",
              name: "",
              type: "tuple[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_blockId",
              type: "uint256",
            },
          ],
          name: "getRecordById",
          outputs: [
            {
              components: [
                {
                  internalType: "uint256",
                  name: "matchId",
                  type: "uint256",
                },
                {
                  internalType: "address",
                  name: "winner",
                  type: "address",
                },
                {
                  internalType: "string",
                  name: "winnerName",
                  type: "string",
                },
                {
                  internalType: "uint256",
                  name: "timestamp",
                  type: "uint256",
                },
                {
                  internalType: "string",
                  name: "extraData",
                  type: "string",
                },
              ],
              internalType: "struct ImmortalBlock.ImmortalRecord",
              name: "",
              type: "tuple",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "getRecordsCount",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "immortalRecords",
          outputs: [
            {
              internalType: "uint256",
              name: "matchId",
              type: "uint256",
            },
            {
              internalType: "address",
              name: "winner",
              type: "address",
            },
            {
              internalType: "string",
              name: "winnerName",
              type: "string",
            },
            {
              internalType: "uint256",
              name: "timestamp",
              type: "uint256",
            },
            {
              internalType: "string",
              name: "extraData",
              type: "string",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "owner",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "renounceOwnership",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "newOwner",
              type: "address",
            },
          ],
          name: "transferOwnership",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
      ],
      inheritedFunctions: {
        owner: "@openzeppelin/contracts/access/Ownable.sol",
        renounceOwnership: "@openzeppelin/contracts/access/Ownable.sol",
        transferOwnership: "@openzeppelin/contracts/access/Ownable.sol",
      },
    },
    MatchContract: {
      address: "0x0769f9B1d1772349Fe8FAFd9F6B83B0832a27cEf",
      abi: [
        {
          inputs: [
            {
              internalType: "address",
              name: "_initialOwner",
              type: "address",
            },
            {
              internalType: "address",
              name: "_immortalBlockAddr",
              type: "address",
            },
            {
              internalType: "address",
              name: "_audienceManagerAddr",
              type: "address",
            },
            {
              internalType: "address",
              name: "_refereeAddr",
              type: "address",
            },
          ],
          stateMutability: "nonpayable",
          type: "constructor",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "owner",
              type: "address",
            },
          ],
          name: "OwnableInvalidOwner",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "account",
              type: "address",
            },
          ],
          name: "OwnableUnauthorizedAccount",
          type: "error",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "uint256",
              name: "matchId",
              type: "uint256",
            },
            {
              indexed: true,
              internalType: "uint256",
              name: "questionIndex",
              type: "uint256",
            },
            {
              indexed: true,
              internalType: "address",
              name: "player",
              type: "address",
            },
            {
              indexed: false,
              internalType: "bool",
              name: "isCorrect",
              type: "bool",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "newScorePlayerA",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "newScorePlayerB",
              type: "uint256",
            },
          ],
          name: "AnswerResultSubmitted",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "uint256",
              name: "matchId",
              type: "uint256",
            },
            {
              indexed: true,
              internalType: "address",
              name: "winner",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "finalScorePlayerA",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "finalScorePlayerB",
              type: "uint256",
            },
          ],
          name: "MatchConcluded",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "uint256",
              name: "matchId",
              type: "uint256",
            },
            {
              indexed: true,
              internalType: "address",
              name: "playerA",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "playerB",
              type: "address",
            },
            {
              indexed: false,
              internalType: "address",
              name: "firstPlayerTurn",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "startTime",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "firstQuestionDeadline",
              type: "uint256",
            },
          ],
          name: "MatchStarted",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "previousOwner",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "newOwner",
              type: "address",
            },
          ],
          name: "OwnershipTransferred",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "uint256",
              name: "matchId",
              type: "uint256",
            },
            {
              indexed: true,
              internalType: "address",
              name: "playerAddress",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint8",
              name: "consecutiveWrong",
              type: "uint8",
            },
          ],
          name: "PlayerBecameReplaceable",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "uint256",
              name: "matchId",
              type: "uint256",
            },
            {
              indexed: true,
              internalType: "address",
              name: "oldPlayer",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "newPlayer",
              type: "address",
            },
          ],
          name: "PlayerReplaced",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "uint256",
              name: "matchId",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "nextQuestionIndex",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "address",
              name: "nextPlayerTurn",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "newDeadline",
              type: "uint256",
            },
          ],
          name: "PlayerTurnAdvanced",
          type: "event",
        },
        {
          inputs: [],
          name: "ANSWER_TIMEOUT_DURATION",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "MAX_CONSECUTIVE_WRONG_ANSWERS_FOR_REPLACEMENT",
          outputs: [
            {
              internalType: "uint8",
              name: "",
              type: "uint8",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "TOTAL_QUESTIONS",
          outputs: [
            {
              internalType: "uint8",
              name: "",
              type: "uint8",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "audienceManagerContractAddress",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "immortalBlockContractAddress",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "matches",
          outputs: [
            {
              internalType: "uint256",
              name: "matchId",
              type: "uint256",
            },
            {
              components: [
                {
                  internalType: "address",
                  name: "playerAddress",
                  type: "address",
                },
                {
                  internalType: "uint256",
                  name: "score",
                  type: "uint256",
                },
                {
                  internalType: "uint8",
                  name: "consecutiveWrongAnswers",
                  type: "uint8",
                },
                {
                  internalType: "bool",
                  name: "isActive",
                  type: "bool",
                },
              ],
              internalType: "struct MatchContract.PlayerMatchState",
              name: "playerA",
              type: "tuple",
            },
            {
              components: [
                {
                  internalType: "address",
                  name: "playerAddress",
                  type: "address",
                },
                {
                  internalType: "uint256",
                  name: "score",
                  type: "uint256",
                },
                {
                  internalType: "uint8",
                  name: "consecutiveWrongAnswers",
                  type: "uint8",
                },
                {
                  internalType: "bool",
                  name: "isActive",
                  type: "bool",
                },
              ],
              internalType: "struct MatchContract.PlayerMatchState",
              name: "playerB",
              type: "tuple",
            },
            {
              internalType: "uint8",
              name: "currentQuestionIndex",
              type: "uint8",
            },
            {
              internalType: "address",
              name: "currentPlayerTurn",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "currentQuestionDeadline",
              type: "uint256",
            },
            {
              internalType: "enum MatchContract.MatchStatus",
              name: "status",
              type: "uint8",
            },
            {
              internalType: "address",
              name: "winner",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "owner",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "refereeAddress",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "renounceOwnership",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_matchId",
              type: "uint256",
            },
            {
              internalType: "address",
              name: "_playerToReplace",
              type: "address",
            },
            {
              internalType: "address",
              name: "_newPlayer",
              type: "address",
            },
          ],
          name: "replacePlayer",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_newAddress",
              type: "address",
            },
          ],
          name: "setAudienceManagerContract",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_newAddress",
              type: "address",
            },
          ],
          name: "setImmortalBlockContract",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_newAddress",
              type: "address",
            },
          ],
          name: "setRefereeAddress",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_matchId",
              type: "uint256",
            },
            {
              internalType: "address",
              name: "_playerA",
              type: "address",
            },
            {
              internalType: "address",
              name: "_playerB",
              type: "address",
            },
          ],
          name: "startMatch",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_matchId",
              type: "uint256",
            },
            {
              internalType: "address",
              name: "_playerWhoAnswered",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "_questionIndex",
              type: "uint256",
            },
            {
              internalType: "bool",
              name: "_isCorrect",
              type: "bool",
            },
          ],
          name: "submitAnswerResult",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "newOwner",
              type: "address",
            },
          ],
          name: "transferOwnership",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
      ],
      inheritedFunctions: {
        owner: "@openzeppelin/contracts/access/Ownable.sol",
        renounceOwnership: "@openzeppelin/contracts/access/Ownable.sol",
        transferOwnership: "@openzeppelin/contracts/access/Ownable.sol",
      },
    },
    MatchRegistry: {
      address: "0xC1C2De6ee01F1Ae11C2fee2d4b0b4b42Fa5F930c",
      abi: [
        {
          inputs: [
            {
              internalType: "address",
              name: "_initialOwner",
              type: "address",
            },
          ],
          stateMutability: "nonpayable",
          type: "constructor",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "owner",
              type: "address",
            },
          ],
          name: "OwnableInvalidOwner",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "account",
              type: "address",
            },
          ],
          name: "OwnableUnauthorizedAccount",
          type: "error",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "uint256",
              name: "matchId",
              type: "uint256",
            },
            {
              indexed: true,
              internalType: "address",
              name: "fighter",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "registrationTime",
              type: "uint256",
            },
          ],
          name: "FighterRegistered",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "previousOwner",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "newOwner",
              type: "address",
            },
          ],
          name: "OwnershipTransferred",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "uint256",
              name: "matchId",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "closedAtTimestamp",
              type: "uint256",
            },
          ],
          name: "RegistrationClosed",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "uint256",
              name: "matchId",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "openedAtTimestamp",
              type: "uint256",
            },
          ],
          name: "RegistrationOpened",
          type: "event",
        },
        {
          inputs: [],
          name: "closeCurrentMatchRegistration",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "currentMatchId",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_matchId",
              type: "uint256",
            },
          ],
          name: "getCandidatePoolForMatch",
          outputs: [
            {
              internalType: "address[]",
              name: "",
              type: "address[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "getCurrentCandidatePool",
          outputs: [
            {
              internalType: "address[]",
              name: "",
              type: "address[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_matchId",
              type: "uint256",
            },
            {
              internalType: "address",
              name: "_candidate",
              type: "address",
            },
          ],
          name: "isCandidate",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          name: "isCandidateForMatch",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "openNewMatchRegistration",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "owner",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "registerAsFighter",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "registrationOpen",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "renounceOwnership",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "newOwner",
              type: "address",
            },
          ],
          name: "transferOwnership",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
      ],
      inheritedFunctions: {
        owner: "@openzeppelin/contracts/access/Ownable.sol",
        renounceOwnership: "@openzeppelin/contracts/access/Ownable.sol",
        transferOwnership: "@openzeppelin/contracts/access/Ownable.sol",
      },
    },
    YourContract: {
      address: "0x9d17583E077560C7c0D97179651d258f17B24947",
      abi: [
        {
          inputs: [
            {
              internalType: "address",
              name: "_owner",
              type: "address",
            },
          ],
          stateMutability: "nonpayable",
          type: "constructor",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "greetingSetter",
              type: "address",
            },
            {
              indexed: false,
              internalType: "string",
              name: "newGreeting",
              type: "string",
            },
            {
              indexed: false,
              internalType: "bool",
              name: "premium",
              type: "bool",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "value",
              type: "uint256",
            },
          ],
          name: "GreetingChange",
          type: "event",
        },
        {
          inputs: [],
          name: "greeting",
          outputs: [
            {
              internalType: "string",
              name: "",
              type: "string",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "owner",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "premium",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "_newGreeting",
              type: "string",
            },
          ],
          name: "setGreeting",
          outputs: [],
          stateMutability: "payable",
          type: "function",
        },
        {
          inputs: [],
          name: "totalCounter",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          name: "userGreetingCounter",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "withdraw",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          stateMutability: "payable",
          type: "receive",
        },
      ],
      inheritedFunctions: {},
    },
  },
  31337: {
    AudienceManager: {
      address: "0x9A676e781A523b5d0C0e43731313A708CB607508",
      abi: [
        {
          inputs: [
            {
              internalType: "address",
              name: "_initialOwner",
              type: "address",
            },
          ],
          stateMutability: "nonpayable",
          type: "constructor",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "owner",
              type: "address",
            },
          ],
          name: "OwnableInvalidOwner",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "account",
              type: "address",
            },
          ],
          name: "OwnableUnauthorizedAccount",
          type: "error",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "uint256",
              name: "matchId",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "address",
              name: "player1",
              type: "address",
            },
            {
              indexed: false,
              internalType: "address",
              name: "player2",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "timestamp",
              type: "uint256",
            },
          ],
          name: "ActiveFightersSet",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "uint256",
              name: "matchId",
              type: "uint256",
            },
            {
              indexed: true,
              internalType: "address",
              name: "fighterCheeredFor",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "audienceMember",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "newTotalHeatForThisPairing",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "cheerAmount",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "timestamp",
              type: "uint256",
            },
          ],
          name: "FighterCheered",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "previousOwner",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "newOwner",
              type: "address",
            },
          ],
          name: "OwnershipTransferred",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "uint256",
              name: "matchId",
              type: "uint256",
            },
            {
              indexed: true,
              internalType: "uint256",
              name: "seatId",
              type: "uint256",
            },
            {
              indexed: true,
              internalType: "address",
              name: "user",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "timestamp",
              type: "uint256",
            },
          ],
          name: "SeatLeft",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "uint256",
              name: "matchId",
              type: "uint256",
            },
            {
              indexed: true,
              internalType: "uint256",
              name: "seatId",
              type: "uint256",
            },
            {
              indexed: true,
              internalType: "address",
              name: "user",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "timestamp",
              type: "uint256",
            },
          ],
          name: "SeatTaken",
          type: "event",
        },
        {
          inputs: [],
          name: "TOTAL_SEATS",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "activeFightersInMatch",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_matchId",
              type: "uint256",
            },
            {
              internalType: "address",
              name: "_fighterToCheerFor",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "_cheerPoints",
              type: "uint256",
            },
          ],
          name: "cheerForFighter",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
            {
              internalType: "address",
              name: "",
              type: "address",
            },
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          name: "fighterAudienceHeat",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_matchId",
              type: "uint256",
            },
          ],
          name: "getActiveFighters",
          outputs: [
            {
              internalType: "address[2]",
              name: "",
              type: "address[2]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_matchId",
              type: "uint256",
            },
            {
              internalType: "address",
              name: "_fighter",
              type: "address",
            },
            {
              internalType: "address",
              name: "_audienceMember",
              type: "address",
            },
          ],
          name: "getAudienceHeatForFighter",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_matchId",
              type: "uint256",
            },
          ],
          name: "getOccupiedSeatInfo",
          outputs: [
            {
              internalType: "uint256[]",
              name: "seatIds_",
              type: "uint256[]",
            },
            {
              internalType: "address[]",
              name: "occupants_",
              type: "address[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_matchId",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "_seatIdFromFrontend",
              type: "uint256",
            },
          ],
          name: "getSeatOccupant",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_matchId",
              type: "uint256",
            },
            {
              internalType: "address",
              name: "_user",
              type: "address",
            },
          ],
          name: "getUserSeatId",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_matchId",
              type: "uint256",
            },
          ],
          name: "leaveSeat",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "owner",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "renounceOwnership",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "seatOccupants",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_matchId",
              type: "uint256",
            },
            {
              internalType: "address",
              name: "_player1",
              type: "address",
            },
            {
              internalType: "address",
              name: "_player2",
              type: "address",
            },
          ],
          name: "setActiveFighters",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_matchId",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "_seatIdFromFrontend",
              type: "uint256",
            },
          ],
          name: "takeSeat",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "newOwner",
              type: "address",
            },
          ],
          name: "transferOwnership",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          name: "userCurrentSeat",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
      ],
      inheritedFunctions: {
        owner: "@openzeppelin/contracts/access/Ownable.sol",
        renounceOwnership: "@openzeppelin/contracts/access/Ownable.sol",
        transferOwnership: "@openzeppelin/contracts/access/Ownable.sol",
      },
    },
    ImmortalBlock: {
      address: "0x610178dA211FEF7D417bC0e6FeD39F05609AD788",
      abi: [
        {
          inputs: [
            {
              internalType: "address",
              name: "_initialOwner",
              type: "address",
            },
          ],
          stateMutability: "nonpayable",
          type: "constructor",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "owner",
              type: "address",
            },
          ],
          name: "OwnableInvalidOwner",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "account",
              type: "address",
            },
          ],
          name: "OwnableUnauthorizedAccount",
          type: "error",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "uint256",
              name: "blockId",
              type: "uint256",
            },
            {
              indexed: true,
              internalType: "uint256",
              name: "matchId",
              type: "uint256",
            },
            {
              indexed: true,
              internalType: "address",
              name: "winner",
              type: "address",
            },
            {
              indexed: false,
              internalType: "string",
              name: "winnerName",
              type: "string",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "timestamp",
              type: "uint256",
            },
          ],
          name: "BlockForged",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "previousOwner",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "newOwner",
              type: "address",
            },
          ],
          name: "OwnershipTransferred",
          type: "event",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_matchId",
              type: "uint256",
            },
            {
              internalType: "address",
              name: "_winner",
              type: "address",
            },
            {
              internalType: "string",
              name: "_winnerName",
              type: "string",
            },
            {
              internalType: "string",
              name: "_extraData",
              type: "string",
            },
          ],
          name: "forgeBlock",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_limit",
              type: "uint256",
            },
          ],
          name: "getRecentRecords",
          outputs: [
            {
              components: [
                {
                  internalType: "uint256",
                  name: "matchId",
                  type: "uint256",
                },
                {
                  internalType: "address",
                  name: "winner",
                  type: "address",
                },
                {
                  internalType: "string",
                  name: "winnerName",
                  type: "string",
                },
                {
                  internalType: "uint256",
                  name: "timestamp",
                  type: "uint256",
                },
                {
                  internalType: "string",
                  name: "extraData",
                  type: "string",
                },
              ],
              internalType: "struct ImmortalBlock.ImmortalRecord[]",
              name: "",
              type: "tuple[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_blockId",
              type: "uint256",
            },
          ],
          name: "getRecordById",
          outputs: [
            {
              components: [
                {
                  internalType: "uint256",
                  name: "matchId",
                  type: "uint256",
                },
                {
                  internalType: "address",
                  name: "winner",
                  type: "address",
                },
                {
                  internalType: "string",
                  name: "winnerName",
                  type: "string",
                },
                {
                  internalType: "uint256",
                  name: "timestamp",
                  type: "uint256",
                },
                {
                  internalType: "string",
                  name: "extraData",
                  type: "string",
                },
              ],
              internalType: "struct ImmortalBlock.ImmortalRecord",
              name: "",
              type: "tuple",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "getRecordsCount",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "immortalRecords",
          outputs: [
            {
              internalType: "uint256",
              name: "matchId",
              type: "uint256",
            },
            {
              internalType: "address",
              name: "winner",
              type: "address",
            },
            {
              internalType: "string",
              name: "winnerName",
              type: "string",
            },
            {
              internalType: "uint256",
              name: "timestamp",
              type: "uint256",
            },
            {
              internalType: "string",
              name: "extraData",
              type: "string",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "owner",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "renounceOwnership",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "newOwner",
              type: "address",
            },
          ],
          name: "transferOwnership",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
      ],
      inheritedFunctions: {
        owner: "@openzeppelin/contracts/access/Ownable.sol",
        renounceOwnership: "@openzeppelin/contracts/access/Ownable.sol",
        transferOwnership: "@openzeppelin/contracts/access/Ownable.sol",
      },
    },
    MatchContract: {
      address: "0x959922bE3CAee4b8Cd9a407cc3ac1C251C2007B1",
      abi: [
        {
          inputs: [
            {
              internalType: "address",
              name: "_initialOwner",
              type: "address",
            },
            {
              internalType: "address",
              name: "_immortalBlockAddr",
              type: "address",
            },
            {
              internalType: "address",
              name: "_audienceManagerAddr",
              type: "address",
            },
            {
              internalType: "address",
              name: "_refereeAddr",
              type: "address",
            },
          ],
          stateMutability: "nonpayable",
          type: "constructor",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "owner",
              type: "address",
            },
          ],
          name: "OwnableInvalidOwner",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "account",
              type: "address",
            },
          ],
          name: "OwnableUnauthorizedAccount",
          type: "error",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "uint256",
              name: "matchId",
              type: "uint256",
            },
            {
              indexed: true,
              internalType: "uint256",
              name: "questionIndex",
              type: "uint256",
            },
            {
              indexed: true,
              internalType: "address",
              name: "player",
              type: "address",
            },
            {
              indexed: false,
              internalType: "bool",
              name: "isCorrect",
              type: "bool",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "newScorePlayerA",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "newScorePlayerB",
              type: "uint256",
            },
          ],
          name: "AnswerResultSubmitted",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "uint256",
              name: "matchId",
              type: "uint256",
            },
            {
              indexed: true,
              internalType: "address",
              name: "winner",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "finalScorePlayerA",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "finalScorePlayerB",
              type: "uint256",
            },
          ],
          name: "MatchConcluded",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "uint256",
              name: "matchId",
              type: "uint256",
            },
            {
              indexed: true,
              internalType: "address",
              name: "playerA",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "playerB",
              type: "address",
            },
            {
              indexed: false,
              internalType: "address",
              name: "firstPlayerTurn",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "startTime",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "firstQuestionDeadline",
              type: "uint256",
            },
          ],
          name: "MatchStarted",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "previousOwner",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "newOwner",
              type: "address",
            },
          ],
          name: "OwnershipTransferred",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "uint256",
              name: "matchId",
              type: "uint256",
            },
            {
              indexed: true,
              internalType: "address",
              name: "playerAddress",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint8",
              name: "consecutiveWrong",
              type: "uint8",
            },
          ],
          name: "PlayerBecameReplaceable",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "uint256",
              name: "matchId",
              type: "uint256",
            },
            {
              indexed: true,
              internalType: "address",
              name: "oldPlayer",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "newPlayer",
              type: "address",
            },
          ],
          name: "PlayerReplaced",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "uint256",
              name: "matchId",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "nextQuestionIndex",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "address",
              name: "nextPlayerTurn",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "newDeadline",
              type: "uint256",
            },
          ],
          name: "PlayerTurnAdvanced",
          type: "event",
        },
        {
          inputs: [],
          name: "ANSWER_TIMEOUT_DURATION",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "MAX_CONSECUTIVE_WRONG_ANSWERS_FOR_REPLACEMENT",
          outputs: [
            {
              internalType: "uint8",
              name: "",
              type: "uint8",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "TOTAL_QUESTIONS",
          outputs: [
            {
              internalType: "uint8",
              name: "",
              type: "uint8",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "audienceManagerContractAddress",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "immortalBlockContractAddress",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "matches",
          outputs: [
            {
              internalType: "uint256",
              name: "matchId",
              type: "uint256",
            },
            {
              components: [
                {
                  internalType: "address",
                  name: "playerAddress",
                  type: "address",
                },
                {
                  internalType: "uint256",
                  name: "score",
                  type: "uint256",
                },
                {
                  internalType: "uint8",
                  name: "consecutiveWrongAnswers",
                  type: "uint8",
                },
                {
                  internalType: "bool",
                  name: "isActive",
                  type: "bool",
                },
              ],
              internalType: "struct MatchContract.PlayerMatchState",
              name: "playerA",
              type: "tuple",
            },
            {
              components: [
                {
                  internalType: "address",
                  name: "playerAddress",
                  type: "address",
                },
                {
                  internalType: "uint256",
                  name: "score",
                  type: "uint256",
                },
                {
                  internalType: "uint8",
                  name: "consecutiveWrongAnswers",
                  type: "uint8",
                },
                {
                  internalType: "bool",
                  name: "isActive",
                  type: "bool",
                },
              ],
              internalType: "struct MatchContract.PlayerMatchState",
              name: "playerB",
              type: "tuple",
            },
            {
              internalType: "uint8",
              name: "currentQuestionIndex",
              type: "uint8",
            },
            {
              internalType: "address",
              name: "currentPlayerTurn",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "currentQuestionDeadline",
              type: "uint256",
            },
            {
              internalType: "enum MatchContract.MatchStatus",
              name: "status",
              type: "uint8",
            },
            {
              internalType: "address",
              name: "winner",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "owner",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "refereeAddress",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "renounceOwnership",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_matchId",
              type: "uint256",
            },
            {
              internalType: "address",
              name: "_playerToReplace",
              type: "address",
            },
            {
              internalType: "address",
              name: "_newPlayer",
              type: "address",
            },
          ],
          name: "replacePlayer",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_newAddress",
              type: "address",
            },
          ],
          name: "setAudienceManagerContract",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_newAddress",
              type: "address",
            },
          ],
          name: "setImmortalBlockContract",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_newAddress",
              type: "address",
            },
          ],
          name: "setRefereeAddress",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_matchId",
              type: "uint256",
            },
            {
              internalType: "address",
              name: "_playerA",
              type: "address",
            },
            {
              internalType: "address",
              name: "_playerB",
              type: "address",
            },
          ],
          name: "startMatch",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_matchId",
              type: "uint256",
            },
            {
              internalType: "address",
              name: "_playerWhoAnswered",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "_questionIndex",
              type: "uint256",
            },
            {
              internalType: "bool",
              name: "_isCorrect",
              type: "bool",
            },
          ],
          name: "submitAnswerResult",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "newOwner",
              type: "address",
            },
          ],
          name: "transferOwnership",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
      ],
      inheritedFunctions: {
        owner: "@openzeppelin/contracts/access/Ownable.sol",
        renounceOwnership: "@openzeppelin/contracts/access/Ownable.sol",
        transferOwnership: "@openzeppelin/contracts/access/Ownable.sol",
      },
    },
    MatchRegistry: {
      address: "0xA51c1fc2f0D1a1b8494Ed1FE312d7C3a78Ed91C0",
      abi: [
        {
          inputs: [
            {
              internalType: "address",
              name: "_initialOwner",
              type: "address",
            },
          ],
          stateMutability: "nonpayable",
          type: "constructor",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "owner",
              type: "address",
            },
          ],
          name: "OwnableInvalidOwner",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "account",
              type: "address",
            },
          ],
          name: "OwnableUnauthorizedAccount",
          type: "error",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "uint256",
              name: "matchId",
              type: "uint256",
            },
            {
              indexed: true,
              internalType: "address",
              name: "fighter",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "registrationTime",
              type: "uint256",
            },
          ],
          name: "FighterRegistered",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "previousOwner",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "newOwner",
              type: "address",
            },
          ],
          name: "OwnershipTransferred",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "uint256",
              name: "matchId",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "closedAtTimestamp",
              type: "uint256",
            },
          ],
          name: "RegistrationClosed",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "uint256",
              name: "matchId",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "openedAtTimestamp",
              type: "uint256",
            },
          ],
          name: "RegistrationOpened",
          type: "event",
        },
        {
          inputs: [],
          name: "closeCurrentMatchRegistration",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "currentMatchId",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_matchId",
              type: "uint256",
            },
          ],
          name: "getCandidatePoolForMatch",
          outputs: [
            {
              internalType: "address[]",
              name: "",
              type: "address[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "getCurrentCandidatePool",
          outputs: [
            {
              internalType: "address[]",
              name: "",
              type: "address[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_matchId",
              type: "uint256",
            },
            {
              internalType: "address",
              name: "_candidate",
              type: "address",
            },
          ],
          name: "isCandidate",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          name: "isCandidateForMatch",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "openNewMatchRegistration",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "owner",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "registerAsFighter",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "registrationOpen",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "renounceOwnership",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "newOwner",
              type: "address",
            },
          ],
          name: "transferOwnership",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
      ],
      inheritedFunctions: {
        owner: "@openzeppelin/contracts/access/Ownable.sol",
        renounceOwnership: "@openzeppelin/contracts/access/Ownable.sol",
        transferOwnership: "@openzeppelin/contracts/access/Ownable.sol",
      },
    },
    YourContract: {
      address: "0x8A791620dd6260079BF849Dc5567aDC3F2FdC318",
      abi: [
        {
          inputs: [
            {
              internalType: "address",
              name: "_owner",
              type: "address",
            },
          ],
          stateMutability: "nonpayable",
          type: "constructor",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "greetingSetter",
              type: "address",
            },
            {
              indexed: false,
              internalType: "string",
              name: "newGreeting",
              type: "string",
            },
            {
              indexed: false,
              internalType: "bool",
              name: "premium",
              type: "bool",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "value",
              type: "uint256",
            },
          ],
          name: "GreetingChange",
          type: "event",
        },
        {
          inputs: [],
          name: "greeting",
          outputs: [
            {
              internalType: "string",
              name: "",
              type: "string",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "owner",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "premium",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "_newGreeting",
              type: "string",
            },
          ],
          name: "setGreeting",
          outputs: [],
          stateMutability: "payable",
          type: "function",
        },
        {
          inputs: [],
          name: "totalCounter",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          name: "userGreetingCounter",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "withdraw",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          stateMutability: "payable",
          type: "receive",
        },
      ],
      inheritedFunctions: {},
    },
  },
} as const;

export default deployedContracts satisfies GenericContractsDeclaration;
