{
  "address": "0x4E810572FBEB16bf58c6e94CDD9009130e3B04d5",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_initialOwner",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "OwnableInvalidOwner",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "OwnableUnauthorizedAccount",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "blockId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "matchId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "winner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "winnerName",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "BlockForged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_matchId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_winner",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_winnerName",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_extraData",
          "type": "string"
        }
      ],
      "name": "forgeBlock",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_limit",
          "type": "uint256"
        }
      ],
      "name": "getRecentRecords",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "matchId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "winner",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "winnerName",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "timestamp",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "extraData",
              "type": "string"
            }
          ],
          "internalType": "struct ImmortalBlock.ImmortalRecord[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_blockId",
          "type": "uint256"
        }
      ],
      "name": "getRecordById",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "matchId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "winner",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "winnerName",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "timestamp",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "extraData",
              "type": "string"
            }
          ],
          "internalType": "struct ImmortalBlock.ImmortalRecord",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getRecordsCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "immortalRecords",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "matchId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "winner",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "winnerName",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "extraData",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x9a150c780e4e52fb236d9c3d9b78e8c8703bc897e98700b6c3c27bd3f0b46b4c",
  "receipt": {
    "to": null,
    "from": "0x8d6184D01C461d53044094c6e8850bf60604dDA2",
    "contractAddress": "0x4E810572FBEB16bf58c6e94CDD9009130e3B04d5",
    "transactionIndex": 13,
    "gasUsed": "913174",
    "logsBloom": "0x
    "blockHash": "0x0ca90cdcd88febc7f02a164c42210458850112f3e87747ef67eaf73e34ae5448",
    "transactionHash": "0x9a150c780e4e52fb236d9c3d9b78e8c8703bc897e98700b6c3c27bd3f0b46b4c",
    "logs": [
      {
        "transactionIndex": 13,
        "blockNumber": 20616887,
        "transactionHash": "0x9a150c780e4e52fb236d9c3d9b78e8c8703bc897e98700b6c3c27bd3f0b46b4c",
        "address": "0x4E810572FBEB16bf58c6e94CDD9009130e3B04d5",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x0000000000000000000000008d6184d01c461d53044094c6e8850bf60604dda2"
        ],
        "data": "0x",
        "logIndex": 36,
        "blockHash": "0x0ca90cdcd88febc7f02a164c42210458850112f3e87747ef67eaf73e34ae5448"
      }
    ],
    "blockNumber": 20616887,
    "cumulativeGasUsed": "3008144",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x8d6184D01C461d53044094c6e8850bf60604dDA2"
  ],
  "numDeployments": 1,
  "solcInputHash": "7ad01f291c3080067dc50314b1e08bfa",
  "metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_initialOwner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"blockId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"matchId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"winner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"winnerName\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"BlockForged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_matchId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_winner\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_winnerName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_extraData\",\"type\":\"string\"}],\"name\":\"forgeBlock\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_limit\",\"type\":\"uint256\"}],\"name\":\"getRecentRecords\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"matchId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"winner\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"winnerName\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"extraData\",\"type\":\"string\"}],\"internalType\":\"struct ImmortalBlock.ImmortalRecord[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_blockId\",\"type\":\"uint256\"}],\"name\":\"getRecordById\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"matchId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"winner\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"winnerName\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"extraData\",\"type\":\"string\"}],\"internalType\":\"struct ImmortalBlock.ImmortalRecord\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRecordsCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"immortalRecords\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"matchId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"winner\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"winnerName\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"extraData\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"\\u5b58\\u50a8\\u6bcf\\u573a\\u6bd4\\u8d5b\\u7684\\u7ed3\\u679c\\u3002\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"\\u8bbe\\u7f6e\\u5408\\u7ea6\\u6240\\u6709\\u8005\"},\"forgeBlock(uint256,address,string,string)\":{\"details\":\"\\u8bb0\\u5f55\\u6bd4\\u8d5b\\u7ed3\\u679c\",\"params\":{\"_extraData\":\"\\u989d\\u5916\\u6570\\u636e (\\u4f8b\\u5982 IPFS CID)\",\"_matchId\":\"\\u6bd4\\u8d5bID\",\"_winner\":\"\\u80dc\\u5229\\u8005\\u5730\\u5740\",\"_winnerName\":\"\\u80dc\\u5229\\u8005\\u540d\\u79f0\"}},\"getRecentRecords(uint256)\":{\"details\":\"\\u83b7\\u53d6\\u6700\\u8fd1\\u7684N\\u4e2a\\u4e0d\\u673d\\u533a\\u5757\",\"params\":{\"_limit\":\"\\u8fd4\\u56de\\u7684\\u6700\\u8fd1\\u8bb0\\u5f55\\u6570\\u91cf\"},\"returns\":{\"_0\":\"\\u4e0d\\u673d\\u533a\\u5757\\u6570\\u7ec4\"}},\"getRecordById(uint256)\":{\"details\":\"\\u83b7\\u53d6\\u4e0d\\u673d\\u533a\\u5757\",\"params\":{\"_blockId\":\"\\u533a\\u5757ID\"},\"returns\":{\"_0\":\"\\u4e0d\\u673d\\u533a\\u5757\"}},\"getRecordsCount()\":{\"details\":\"\\u83b7\\u53d6\\u4e0d\\u673d\\u533a\\u5757\\u6570\\u91cf\",\"returns\":{\"_0\":\"\\u4e0d\\u673d\\u533a\\u5757\\u6570\\u91cf\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"\\u4e0d\\u673d\\u533a\\u5757\\u5408\\u7ea6\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ImmortalBlock.sol\":\"ImmortalBlock\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {Context} from \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * The initial owner is set to the address provided by the deployer. This can\\n * later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    /**\\n     * @dev The caller account is not authorized to perform an operation.\\n     */\\n    error OwnableUnauthorizedAccount(address account);\\n\\n    /**\\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\\n     */\\n    error OwnableInvalidOwner(address owner);\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\\n     */\\n    constructor(address initialOwner) {\\n        if (initialOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(initialOwner);\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        if (owner() != _msgSender()) {\\n            revert OwnableUnauthorizedAccount(_msgSender());\\n        }\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        if (newOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\"},\"contracts/ImmortalBlock.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\npragma solidity >=0.8.0 <0.9.0;\\n\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\"; \\n\\n/**\\n * @title \\u4e0d\\u673d\\u533a\\u5757\\u5408\\u7ea6\\n * @dev \\u5b58\\u50a8\\u6bcf\\u573a\\u6bd4\\u8d5b\\u7684\\u7ed3\\u679c\\u3002\\n */\\ncontract ImmortalBlock is Ownable {\\n\\n    struct ImmortalRecord {\\n        uint256 matchId;                // \\u5bf9\\u5e94\\u7684\\u6bd4\\u8d5b ID\\n        address winner;                 // \\u80dc\\u5229\\u8005\\u5730\\u5740\\n        string winnerName;              // \\u80dc\\u5229\\u8005\\u540d\\u79f0\\n        uint256 timestamp;              // \\u8bb0\\u5f55\\u521b\\u5efa\\u7684\\u65f6\\u95f4\\u6233\\n        string extraData;               // \\u989d\\u5916\\u6570\\u636e (\\u4f8b\\u5982 IPFS CID)\\n    }\\n\\n    ImmortalRecord[] public immortalRecords;\\n\\n    event BlockForged(\\n        uint256 indexed blockId,        // \\u65b0\\u533a\\u5757\\u7684 ID (\\u5373\\u6570\\u7ec4\\u7d22\\u5f15)\\n        uint256 indexed matchId,        // \\u6bd4\\u8d5b ID\\n        address indexed winner,         // \\u80dc\\u5229\\u8005\\u5730\\u5740\\n        string winnerName,\\n        uint256 timestamp\\n    );\\n\\n    /**\\n     * @dev \\u8bbe\\u7f6e\\u5408\\u7ea6\\u6240\\u6709\\u8005\\n     */\\n    constructor(address _initialOwner) Ownable(_initialOwner) {}\\n\\n    /**\\n     * @dev \\u8bb0\\u5f55\\u6bd4\\u8d5b\\u7ed3\\u679c\\n     * @param _matchId \\u6bd4\\u8d5bID\\n     * @param _winner \\u80dc\\u5229\\u8005\\u5730\\u5740\\n     * @param _winnerName \\u80dc\\u5229\\u8005\\u540d\\u79f0\\n     * @param _extraData \\u989d\\u5916\\u6570\\u636e (\\u4f8b\\u5982 IPFS CID)\\n     */\\n    function forgeBlock(\\n        uint256 _matchId,\\n        address _winner,\\n        string calldata _winnerName, \\n        string calldata _extraData  \\n    ) external onlyOwner { \\n        require(_winner != address(0), \\\"ImmortalBlock: Winner address cannot be zero.\\\");\\n\\n        uint256 blockId = immortalRecords.length;\\n\\n        immortalRecords.push(ImmortalRecord({\\n            matchId: _matchId,\\n            winner: _winner,\\n            winnerName: _winnerName,\\n            timestamp: block.timestamp, \\n            extraData: _extraData\\n        }));\\n\\n        emit BlockForged(blockId, _matchId, _winner, _winnerName, block.timestamp);\\n    }\\n\\n    /**\\n     * @dev \\u83b7\\u53d6\\u4e0d\\u673d\\u533a\\u5757\\u6570\\u91cf\\n     * @return \\u4e0d\\u673d\\u533a\\u5757\\u6570\\u91cf\\n     */\\n    function getRecordsCount() public view returns (uint256) {\\n        return immortalRecords.length;\\n    }\\n\\n    /**\\n     * @dev \\u83b7\\u53d6\\u4e0d\\u673d\\u533a\\u5757\\n     * @param _blockId \\u533a\\u5757ID\\n     * @return \\u4e0d\\u673d\\u533a\\u5757\\n     */\\n    function getRecordById(uint256 _blockId) public view returns (ImmortalRecord memory) {\\n        require(_blockId < immortalRecords.length, \\\"ImmortalBlock: Invalid block ID.\\\");\\n        return immortalRecords[_blockId];\\n    }\\n\\n    /**\\n     * @dev \\u83b7\\u53d6\\u6700\\u8fd1\\u7684N\\u4e2a\\u4e0d\\u673d\\u533a\\u5757\\n     * @param _limit \\u8fd4\\u56de\\u7684\\u6700\\u8fd1\\u8bb0\\u5f55\\u6570\\u91cf\\n     * @return \\u4e0d\\u673d\\u533a\\u5757\\u6570\\u7ec4\\n     */\\n    function getRecentRecords(uint256 _limit) public view returns (ImmortalRecord[] memory) {\\n        uint256 count = immortalRecords.length;\\n        if (_limit == 0) {\\n            return new ImmortalRecord[](0);\\n        }\\n        // \\u5982\\u679c\\u8bf7\\u6c42\\u7684\\u6570\\u91cf\\u8d85\\u8fc7\\u5b9e\\u9645\\u6570\\u91cf\\uff0c\\u5219\\u8fd4\\u56de\\u6240\\u6709\\u8bb0\\u5f55\\n        uint256 numToReturn = _limit > count ? count : _limit;\\n\\n        ImmortalRecord[] memory recent = new ImmortalRecord[](numToReturn);\\n        for (uint256 i = 0; i < numToReturn; i++) {\\n            // \\u4ece\\u6700\\u65b0\\u7684\\u8bb0\\u5f55\\u5f00\\u59cb\\u53d6 (count - 1 \\u662f\\u6700\\u65b0\\uff0ccount - numToReturn \\u662f\\u7b2c numToReturn \\u4e2a\\u6700\\u65b0\\u7684)\\n            recent[i] = immortalRecords[count - 1 - i];\\n        }\\n        return recent;\\n    }\\n}\\n\",\"keccak256\":\"0xcace5788d24c50b5ab3e79509c9b555aea202692c06d47ea83744720710d7484\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100885760003560e01c8063ceeeb1ab1161005b578063ceeeb1ab146100db578063e75b8b23146100ff578063f2fde38b1461011f578063f50817e81461013257600080fd5b8063505158bb1461008d578063715018a6146100a35780637f6624d6146100ad5780638da5cb5b146100c0575b600080fd5b6001546040519081526020015b60405180910390f35b6100ab610152565b005b6100ab6100bb366004610a95565b610166565b6000546040516001600160a01b03909116815260200161009a565b6100ee6100e9366004610b1f565b610350565b60405161009a959493929190610b7e565b61011261010d366004610b1f565b6104ad565b60405161009a9190610c29565b6100ab61012d366004610c43565b6106a0565b610145610140366004610b1f565b6106de565b60405161009a9190610c5e565b61015a61097b565b61016460006109a8565b565b61016e61097b565b6001600160a01b0385166101df5760405162461bcd60e51b815260206004820152602d60248201527f496d6d6f7274616c426c6f636b3a2057696e6e6572206164647265737320636160448201526c373737ba103132903d32b9379760991b60648201526084015b60405180910390fd5b6000600180549050905060016040518060a00160405280898152602001886001600160a01b0316815260200187878080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152505050908252504260208083019190915260408051601f88018390048302810183018252878152920191908790879081908401838280828437600092018290525093909452505083546001808201865594825260209182902084516005909202019081559083015193810180546001600160a01b0319166001600160a01b039095169490941790935550604081015190919060028201906102de9082610d5f565b5060608201516003820155608082015160048201906102fd9082610d5f565b505050856001600160a01b031687827f1442d3821fae7b06b278ce334ca6d07fb8bd049594bd10c5b535427179da057f88884260405161033f93929190610e1f565b60405180910390a450505050505050565b6001818154811061036057600080fd5b60009182526020909120600590910201805460018201546002830180549294506001600160a01b03909116929161039690610cd6565b80601f01602080910402602001604051908101604052809291908181526020018280546103c290610cd6565b801561040f5780601f106103e45761010080835404028352916020019161040f565b820191906000526020600020905b8154815290600101906020018083116103f257829003601f168201915b50505050509080600301549080600401805461042a90610cd6565b80601f016020809104026020016040519081016040528092919081815260200182805461045690610cd6565b80156104a35780601f10610478576101008083540402835291602001916104a3565b820191906000526020600020905b81548152906001019060200180831161048657829003601f168201915b5050505050905085565b6104b56109f8565b60015482106105065760405162461bcd60e51b815260206004820181905260248201527f496d6d6f7274616c426c6f636b3a20496e76616c696420626c6f636b2049442e60448201526064016101d6565b6001828154811061051957610519610e58565b90600052602060002090600502016040518060a0016040529081600082015481526020016001820160009054906101000a90046001600160a01b03166001600160a01b03166001600160a01b0316815260200160028201805461057b90610cd6565b80601f01602080910402602001604051908101604052809291908181526020018280546105a790610cd6565b80156105f45780601f106105c9576101008083540402835291602001916105f4565b820191906000526020600020905b8154815290600101906020018083116105d757829003601f168201915b505050505081526020016003820154815260200160048201805461061790610cd6565b80601f016020809104026020016040519081016040528092919081815260200182805461064390610cd6565b80156106905780601f1061066557610100808354040283529160200191610690565b820191906000526020600020905b81548152906001019060200180831161067357829003601f168201915b5050505050815250509050919050565b6106a861097b565b6001600160a01b0381166106d257604051631e4fbdf760e01b8152600060048201526024016101d6565b6106db816109a8565b50565b600154606090600083900361072657604080516000808252602082019092529061071e565b61070b6109f8565b8152602001906001900390816107035790505b509392505050565b60008184116107355783610737565b815b905060008167ffffffffffffffff81111561075457610754610cc0565b60405190808252806020026020018201604052801561078d57816020015b61077a6109f8565b8152602001906001900390816107725790505b50905060005b82811015610972576001816107a88287610e84565b6107b29190610e84565b815481106107c2576107c2610e58565b90600052602060002090600502016040518060a0016040529081600082015481526020016001820160009054906101000a90046001600160a01b03166001600160a01b03166001600160a01b0316815260200160028201805461082490610cd6565b80601f016020809104026020016040519081016040528092919081815260200182805461085090610cd6565b801561089d5780601f106108725761010080835404028352916020019161089d565b820191906000526020600020905b81548152906001019060200180831161088057829003601f168201915b50505050508152602001600382015481526020016004820180546108c090610cd6565b80601f01602080910402602001604051908101604052809291908181526020018280546108ec90610cd6565b80156109395780601f1061090e57610100808354040283529160200191610939565b820191906000526020600020905b81548152906001019060200180831161091c57829003601f168201915b50505050508152505082828151811061095457610954610e58565b6020026020010181905250808061096a90610e9d565b915050610793565b50949350505050565b6000546001600160a01b031633146101645760405163118cdaa760e01b81523360048201526024016101d6565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6040518060a001604052806000815260200160006001600160a01b031681526020016060815260200160008152602001606081525090565b80356001600160a01b0381168114610a4757600080fd5b919050565b60008083601f840112610a5e57600080fd5b50813567ffffffffffffffff811115610a7657600080fd5b602083019150836020828501011115610a8e57600080fd5b9250929050565b60008060008060008060808789031215610aae57600080fd5b86359550610abe60208801610a30565b9450604087013567ffffffffffffffff80821115610adb57600080fd5b610ae78a838b01610a4c565b90965094506060890135915080821115610b0057600080fd5b50610b0d89828a01610a4c565b979a9699509497509295939492505050565b600060208284031215610b3157600080fd5b5035919050565b6000815180845260005b81811015610b5e57602081850181015186830182015201610b42565b506000602082860101526020601f19601f83011685010191505092915050565b8581526001600160a01b038516602082015260a060408201819052600090610ba890830186610b38565b8460608401528281036080840152610bc08185610b38565b98975050505050505050565b8051825260018060a01b0360208201511660208301526000604082015160a06040850152610bfd60a0850182610b38565b90506060830151606085015260808301518482036080860152610c208282610b38565b95945050505050565b602081526000610c3c6020830184610bcc565b9392505050565b600060208284031215610c5557600080fd5b610c3c82610a30565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015610cb357603f19888603018452610ca1858351610bcc565b94509285019290850190600101610c85565b5092979650505050505050565b634e487b7160e01b600052604160045260246000fd5b600181811c90821680610cea57607f821691505b602082108103610d0a57634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115610d5a57600081815260208120601f850160051c81016020861015610d375750805b601f850160051c820191505b81811015610d5657828155600101610d43565b5050505b505050565b815167ffffffffffffffff811115610d7957610d79610cc0565b610d8d81610d878454610cd6565b84610d10565b602080601f831160018114610dc25760008415610daa5750858301515b600019600386901b1c1916600185901b178555610d56565b600085815260208120601f198616915b82811015610df157888601518255948401946001909101908401610dd2565b5085821015610e0f5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b604081528260408201528284606083013760006060848301015260006060601f19601f8601168301019050826020830152949350505050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b81810381811115610e9757610e97610e6e565b92915050565b600060018201610eaf57610eaf610e6e565b506001019056fea26469706673582212208722f2b51e212236a5b9348df788c0423a1ec15f287c5b4df22230b8c8f7187a64736f6c63430008140033",
  "devdoc": {
    "details": "存储每场比赛的结果。",
    "errors": {
      "OwnableInvalidOwner(address)": [
        {
          "details": "The owner is not a valid owner account. (eg. `address(0)`)"
        }
      ],
      "OwnableUnauthorizedAccount(address)": [
        {
          "details": "The caller account is not authorized to perform an operation."
        }
      ]
    },
    "kind": "dev",
    "methods": {
      "constructor": {
        "details": "设置合约所有者"
      },
      "forgeBlock(uint256,address,string,string)": {
        "details": "记录比赛结果",
        "params": {
          "_extraData": "额外数据 (例如 IPFS CID)",
          "_matchId": "比赛ID",
          "_winner": "胜利者地址",
          "_winnerName": "胜利者名称"
        }
      },
      "getRecentRecords(uint256)": {
        "details": "获取最近的N个不朽区块",
        "params": {
          "_limit": "返回的最近记录数量"
        },
        "returns": {
          "_0": "不朽区块数组"
        }
      },
      "getRecordById(uint256)": {
        "details": "获取不朽区块",
        "params": {
          "_blockId": "区块ID"
        },
        "returns": {
          "_0": "不朽区块"
        }
      },
      "getRecordsCount()": {
        "details": "获取不朽区块数量",
        "returns": {
          "_0": "不朽区块数量"
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "title": "不朽区块合约",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 8,
        "contract": "contracts/ImmortalBlock.sol:ImmortalBlock",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 198,
        "contract": "contracts/ImmortalBlock.sol:ImmortalBlock",
        "label": "immortalRecords",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_struct(ImmortalRecord)194_storage)dyn_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_struct(ImmortalRecord)194_storage)dyn_storage": {
        "base": "t_struct(ImmortalRecord)194_storage",
        "encoding": "dynamic_array",
        "label": "struct ImmortalBlock.ImmortalRecord[]",
        "numberOfBytes": "32"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(ImmortalRecord)194_storage": {
        "encoding": "inplace",
        "label": "struct ImmortalBlock.ImmortalRecord",
        "members": [
          {
            "astId": 185,
            "contract": "contracts/ImmortalBlock.sol:ImmortalBlock",
            "label": "matchId",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 187,
            "contract": "contracts/ImmortalBlock.sol:ImmortalBlock",
            "label": "winner",
            "offset": 0,
            "slot": "1",
            "type": "t_address"
          },
          {
            "astId": 189,
            "contract": "contracts/ImmortalBlock.sol:ImmortalBlock",
            "label": "winnerName",
            "offset": 0,
            "slot": "2",
            "type": "t_string_storage"
          },
          {
            "astId": 191,
            "contract": "contracts/ImmortalBlock.sol:ImmortalBlock",
            "label": "timestamp",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          },
          {
            "astId": 193,
            "contract": "contracts/ImmortalBlock.sol:ImmortalBlock",
            "label": "extraData",
            "offset": 0,
            "slot": "4",
            "type": "t_string_storage"
          }
        ],
        "numberOfBytes": "160"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}